import os

from aiogram import Dispatcher
from aiogram.types import Message, InputFile

from app.database.services.repos import UserRepo, MediaRepo
from app.keyboards import Buttons
from app.keyboards.reply.menu import basic_kb
from app.misc.photo import make_card_photo


async def user_card_cmd(msg: Message, user_db: UserRepo):
    user = await user_db.get_user(msg.from_user.id)
    if not user.is_authorized:
        text = (
            'üì≤ –î–ª—è —Ç–æ–≥–æ —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å –∫–∞—Ä—Ç–∫–æ—é –∫–ª—ñ—î–Ω—Ç–∞, –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ–π—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é!\n\n'
            '–ë–∞–∂–∞—î—à –ø—Ä–æ–π—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é –∑–∞—Ä–∞–∑? –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ'
        )
        await msg.answer(text, reply_markup=basic_kb([[Buttons.menu.auth], [Buttons.menu.back]]))
    else:
        card = make_card_photo(user.my_card)
        await msg.answer_photo(InputFile(card), f'–¢–≤–æ—è –∫–∞—Ä—Ç–∞ –∫–ª—ñ—î–Ω—Ç–∞ {user.my_card}',
                               reply_markup=basic_kb([[Buttons.menu.balance], [Buttons.menu.back]]))
        os.remove(card)


def setup(dp: Dispatcher):
    dp.register_message_handler(user_card_cmd, text=Buttons.menu.card, state='*')
